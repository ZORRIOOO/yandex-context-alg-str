// Комментарий:
/*
-- ПРИНЦИП РАБОТЫ --
В своем решении я реализовал алгоритм поиска элемента в сломанном отсортированном массиве.
Данный алгоритм использует модифицированный двоичный поиск для более эффективного поиска элемента в заданном массиве.

-- ДОКАЗАТЕЛЬСТВО КОРРЕКТНОСТИ --
Я использовал в решении двоичный поиск, который делит область поиска пополам на каждой итерации цикла, что
обеспечивает нам эффективное время выполнения поиска.
Также мое решение учитывает такие ситуации в сломанном массиве, как частичная
отсортированность и смещение индекса элементов, что позволяет корректнее находить нужные элементы в массиве.

-- ВРЕМЕННАЯ СЛОЖНОСТЬ --
Алгоритм использует двоичный поиск, который имеет временную сложность O(log N), где N - количество элементов в массиве.

-- ПРОСТРАНСТВЕННАЯ СЛОЖНОСТЬ --
В моем решении не создаются дополнительные структуры данных. Вводится несколько переменных для индексов и значений, но
это ограничивает пространственную сложность на O(1), что далает мой алгоритм эффективнее в плане ресурсов памяти.
*/

// Отчет: https://contest.yandex.ru/contest/23815/run-report/113524771/

function brokenSearch(arr, k, l = arr.length, left = 0, right = l - 1) {
  if (l === 1) {
    return arr[0] === k ? 0 : -1;
  }

  while (left <= right) {
    let mid = Math.floor((left + right) / 2);

    if (arr[mid] === k) {
      return mid;
    } else if (arr[left] === arr[mid] && arr[mid] === arr[right]) {
      left++;
      right--;
    } else if (arr[left] <= arr[mid]) {
      if (k >= arr[left] && k < arr[mid]) {
        right = mid - 1;
      } else {
        left = mid + 1;
      }
    } else if (arr[mid] <= arr[right]) {
      if (k > arr[mid] && k <= arr[right]) {
        left = mid + 1;
      } else {
        right = mid - 1;
      }
    }
  }

  return -1;
}

function test() {
  const arr1 = [19, 21, 100, 101, 1, 4, 5, 7, 12];
  if (brokenSearch(arr1, 5) !== 6)  {
    console.error("WA");
  }

  const arr2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0];
  if (brokenSearch(arr2, 1) !== 0) {
    console.error("WA");
  }

  const arr3 = [1, 5];
  if (brokenSearch(arr3, 1) !== 0) {
    console.error("WA");
  }

  const arr4 = [1, 2, 3, 5, 6, 7, 9, 0];
  if (brokenSearch(arr4, 3) !== 2) {
    console.error("WA");
  }
}

test();
